# Homebrew package manager configuration (macOS)
- name: Check if Homebrew is installed
  stat:
    path: /opt/homebrew/bin/brew
  register: homebrew_stat
  tags: ['packages', 'homebrew', 'macos']

- name: Install Homebrew using vetted installer
  include_role:
    name: levonk.common.vet_script_installer
  vars:
    vet_script_url: "https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh"
    vet_script_dest: "/tmp/homebrew-install.sh"
    vet_script_args: ""
  when: not homebrew_stat.stat.exists
  tags: ['packages', 'homebrew', 'macos']

- name: Add Homebrew to PATH for the current shell
  shell: |
    echo 'eval "$('/opt/homebrew/bin/brew' shellenv)"' >> ~/.zshrc
    eval "$('/opt/homebrew/bin/brew' shellenv)"
  args:
    executable: /bin/zsh
  when:
    - ansible_os_family == 'Darwin'
    - ansible_user_shell is search('zsh')
  tags: ['packages', 'homebrew', 'macos']

- name: Add Homebrew to PATH for bash
  shell: |
    echo 'eval "$('/opt/homebrew/bin/brew' shellenv)"' >> ~/.bash_profile
    eval "$('/opt/homebrew/bin/brew' shellenv)"
  args:
    executable: /bin/bash
  when:
    - ansible_os_family == 'Darwin'
    - ansible_user_shell is search('bash')
  tags: ['packages', 'homebrew', 'macos']

- name: Set cache file path (match levonk.common.package)
  set_fact:
    levonk_package_cache_file: "{{ levonk_package_cache_file | default('/var/tmp/levonk_package_cache.json') }}"

- name: Stat cache file
  stat:
    path: "{{ levonk_package_cache_file }}"
  register: cache_stat

- name: Slurp cache file if exists
  slurp:
    src: "{{ levonk_package_cache_file }}"
  register: cache_content
  when: cache_stat.stat.exists

- name: Parse cache file (if exists)
  set_fact:
    levonk_package_cache: "{{ cache_content.content | b64decode | from_json }}"
  when: cache_stat.stat.exists

- name: Determine if brew update is needed
  set_fact:
    brew_update_needed: >-
      {{
        (not cache_stat.stat.exists) or
        (levonk_package_cache is not defined) or
        ((ansible_date_time.epoch | int) - (levonk_package_cache.brew_last_update | default(0) | int) > (levonk_package_cache_expiry_minutes | default(60) | int) * 60)
      }}

- name: Update Homebrew if needed
  homebrew:
    update_homebrew: yes
  when:
    - ansible_os_family == 'Darwin'
    - brew_update_needed | bool
  tags: ['packages', 'homebrew', 'macos']

- name: Update cache file timestamp after brew update
  copy:
    dest: "{{ levonk_package_cache_file }}"
    content: "{{ levonk_package_cache | default({}) | combine({'brew_last_update': ansible_date_time.epoch | int}) | to_nice_json }}"
    mode: '0644'
  when:
    - ansible_os_family == 'Darwin'
    - brew_update_needed | bool
  tags: ['packages', 'homebrew', 'macos']

# TODO: Compliance - Ensure cache file is reviewed for security and compliance

- name: Install Homebrew packages
  homebrew:
    name: "{{ item }}"
    state: present
  loop: "{{ homebrew_packages | default([]) }}"
  when:
    - ansible_os_family == 'Darwin'
    - homebrew_packages is defined
  tags: ['packages', 'homebrew', 'macos']

# Security: Homebrew install script is vetted before execution using levonk.common.vet_script_installer.
# All macOS package management and essential package installation is handled here.
