---
# tasks file for levonk.user_setup.thick-shell - Modern CLI tools

# ============================================================================
# direnv - Auto-load .envrc files per directory
# ============================================================================

- name: Install direnv on Windows via Chocolatey
  ansible.windows.win_chocolatey:
    name: direnv
    state: present
  when: ansible_os_family == 'Windows'
  become: true
  tags:
    - thick-shell
    - tools
    - direnv
    - environment

- name: Install direnv on Debian-based systems
  ansible.builtin.apt:
    name: direnv
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"
  become: true
  tags:
    - thick-shell
    - tools
    - direnv
    - environment

- name: Install direnv on macOS via Homebrew
  community.general.homebrew:
    name: direnv
    state: present
  when: ansible_os_family == "Darwin"
  tags:
    - thick-shell
    - tools
    - direnv
    - environment

# ============================================================================
# ripgrep - Blazing-fast search tool
# ============================================================================

- name: Install ripgrep on Windows via Chocolatey
  ansible.windows.win_chocolatey:
    name: ripgrep
    state: present
  when: ansible_os_family == 'Windows'
  become: true
  tags:
    - thick-shell
    - tools
    - ripgrep
    - search

- name: Install ripgrep on Debian-based systems
  ansible.builtin.apt:
    name: ripgrep
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"
  become: true
  tags:
    - thick-shell
    - tools
    - ripgrep
    - search

- name: Install ripgrep on macOS via Homebrew
  community.general.homebrew:
    name: ripgrep
    state: present
  when: ansible_os_family == "Darwin"
  tags:
    - thick-shell
    - tools
    - ripgrep
    - search

# ============================================================================
# bat - Syntax-highlighted cat replacement
# ============================================================================

- name: Install bat on Windows via Chocolatey
  ansible.windows.win_chocolatey:
    name: bat
    state: present
  when: ansible_os_family == 'Windows'
  become: true
  tags:
    - thick-shell
    - tools
    - bat
    - syntax-highlighting

- name: Install bat on Debian-based systems
  ansible.builtin.apt:
    name: bat
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"
  become: true
  tags:
    - thick-shell
    - tools
    - bat
    - syntax-highlighting

- name: Install bat on macOS via Homebrew
  community.general.homebrew:
    name: bat
    state: present
  when: ansible_os_family == "Darwin"
  tags:
    - thick-shell
    - tools
    - bat
    - syntax-highlighting

# ============================================================================
# fd - A simpler, faster alternative to find
# ============================================================================

- name: Install fd on Windows via Chocolatey
  ansible.windows.win_chocolatey:
    name: fd
    state: present
  when: ansible_os_family == 'Windows'
  become: true
  tags:
    - thick-shell
    - tools
    - fd
    - file-search

- name: Install fd on Debian-based systems
  ansible.builtin.apt:
    name: fd-find
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"
  become: true
  tags:
    - thick-shell
    - tools
    - fd
    - file-search

- name: Install fd on macOS via Homebrew
  community.general.homebrew:
    name: fd
    state: present
  when: ansible_os_family == "Darwin"
  tags:
    - thick-shell
    - tools
    - fd
    - file-search

# ============================================================================
# zoxide - A smarter cd command that learns your habits
# ============================================================================

- name: Install zoxide on Windows via Chocolatey
  ansible.windows.win_chocolatey:
    name: zoxide
    state: present
  when: ansible_os_family == 'Windows'
  become: true
  tags:
    - thick-shell
    - tools
    - zoxide
    - navigation

- name: Install zoxide on Debian-based systems
  ansible.builtin.apt:
    name: zoxide
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"
  become: true
  tags:
    - thick-shell
    - tools
    - zoxide
    - navigation

- name: Install zoxide on macOS via Homebrew
  community.general.homebrew:
    name: zoxide
    state: present
  when: ansible_os_family == "Darwin"
  tags:
    - thick-shell
    - tools
    - zoxide
    - navigation

# ============================================================================
# Verification and Integration
# ============================================================================

- name: Verify direnv installation
  ansible.builtin.command:
    cmd: direnv version
  register: direnv_version
  changed_when: false
  failed_when: false
  tags:
    - thick-shell
    - tools
    - direnv
    - verify

- name: Verify ripgrep installation
  ansible.builtin.command:
    cmd: rg --version
  register: ripgrep_version
  changed_when: false
  failed_when: false
  tags:
    - thick-shell
    - tools
    - ripgrep
    - verify

- name: Verify bat installation
  ansible.builtin.command:
    cmd: bat --version
  register: bat_version
  changed_when: false
  failed_when: false
  tags:
    - thick-shell
    - tools
    - bat
    - verify

- name: Verify fd installation (Windows/macOS)
  ansible.builtin.command:
    cmd: fd --version
  register: fd_version
  changed_when: false
  failed_when: false
  when: ansible_os_family in ['Windows', 'Darwin']
  tags:
    - thick-shell
    - tools
    - fd
    - verify

- name: Verify fd installation (Debian - as fdfind)
  ansible.builtin.command:
    cmd: fdfind --version
  register: fd_version_debian
  changed_when: false
  failed_when: false
  when: ansible_os_family == "Debian"
  tags:
    - thick-shell
    - tools
    - fd
    - verify

- name: Verify zoxide installation
  ansible.builtin.command:
    cmd: zoxide --version
  register: zoxide_version
  changed_when: false
  failed_when: false
  tags:
    - thick-shell
    - tools
    - zoxide
    - verify

- name: Display tool versions
  ansible.builtin.debug:
    msg: |
      Modern CLI Tools Installation Summary:
      - direnv: {{ direnv_version.stdout if direnv_version.rc == 0 else 'Not installed' }}
      - ripgrep: {{ ripgrep_version.stdout if ripgrep_version.rc == 0 else 'Not installed' }}
      - bat: {{ bat_version.stdout if bat_version.rc == 0 else 'Not installed' }}
      - fd: {{ fd_version.stdout if (fd_version is defined and fd_version.rc == 0) else (fd_version_debian.stdout if (fd_version_debian is defined and fd_version_debian.rc == 0) else 'Not installed') }}
      - zoxide: {{ zoxide_version.stdout if zoxide_version.rc == 0 else 'Not installed' }}
  tags:
    - thick-shell
    - tools
    - verify

# ============================================================================
# Shell Integration for direnv
# ============================================================================

- name: Add direnv hook to bash
  ansible.builtin.lineinfile:
    path: ~/.bashrc
    line: 'eval "$(direnv hook bash)"'
    create: true
  when: 
    - ansible_os_family != 'Windows'
    - "'bash' in thick_shells"
    - direnv_version.rc == 0
  become: false
  tags:
    - thick-shell
    - tools
    - direnv
    - integration

- name: Add direnv hook to zsh
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    line: 'eval "$(direnv hook zsh)"'
    create: true
  when: 
    - ansible_os_family != 'Windows'
    - "'zsh' in thick_shells"
    - direnv_version.rc == 0
  become: false
  tags:
    - thick-shell
    - tools
    - direnv
    - integration

- name: Add direnv hook to fish
  ansible.builtin.lineinfile:
    path: ~/.config/fish/config.fish
    line: 'direnv hook fish | source'
    create: true
  when: 
    - ansible_os_family != 'Windows'
    - "'fish' in thick_shells"
    - direnv_version.rc == 0
  become: false
  tags:
    - thick-shell
    - tools
    - direnv
    - integration

- name: Create fd symlink on Debian (for consistency)
  ansible.builtin.file:
    src: /usr/bin/fdfind
    dest: /usr/local/bin/fd
    state: link
  when: 
    - ansible_os_family == "Debian"
    - fd_version_debian is defined
    - fd_version_debian.rc == 0
  become: true
  tags:
    - thick-shell
    - tools
    - fd
    - integration

# ============================================================================
# Shell Integration for zoxide
# ============================================================================

- name: Add zoxide init to bash
  ansible.builtin.lineinfile:
    path: ~/.bashrc
    line: 'eval "$(zoxide init bash)"'
    create: true
  when: 
    - ansible_os_family != 'Windows'
    - "'bash' in thick_shells"
    - zoxide_version.rc == 0
  become: false
  tags:
    - thick-shell
    - tools
    - zoxide
    - integration

- name: Add zoxide init to zsh
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    line: 'eval "$(zoxide init zsh)"'
    create: true
  when: 
    - ansible_os_family != 'Windows'
    - "'zsh' in thick_shells"
    - zoxide_version.rc == 0
  become: false
  tags:
    - thick-shell
    - tools
    - zoxide
    - integration

- name: Add zoxide init to fish
  ansible.builtin.lineinfile:
    path: ~/.config/fish/config.fish
    line: 'zoxide init fish | source'
    create: true
  when: 
    - ansible_os_family != 'Windows'
    - "'fish' in thick_shells"
    - zoxide_version.rc == 0
  become: false
  tags:
    - thick-shell
    - tools
    - zoxide
    - integration
